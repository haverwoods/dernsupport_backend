// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "mysql"
  url      = env("DATABASE_URL")
}
// model User {
//   id       Int      @id @default(autoincrement())
//   username String   @unique
//   email    String   @unique
//   password String
// } 

model Client {
  id          Int          @id @default(autoincrement())
  username    String       @unique
  email       String       @unique
  password    String
  accountType String
  requests  Request[]  
  roles    Role[] // Associate roles to users
}


model Request {
  id        Int      @id @default(autoincrement())
  description String
  imageUrl   String
  pickupDate  String? 
  createdAt  DateTime @default(now())
  clientId    Int?
  client      Client ?   @relation(fields: [clientId], references: [id])
  clientEmail String?
}
//role and permisson rolepermisson



model product_list{
  id Int  @id @default(autoincrement())
  name String
  catagory String
  price Int
  stock Int
}

model Role {
    id          Int              @id @default(autoincrement())
    name        String           @unique
    createdAt   DateTime         @default(now())
    updatedAt   DateTime         @updatedAt
    users       Client[]
    permissions RolePermission[]
}

model Permission {
    id         Int              @id @default(autoincrement())
    permission String           @unique
    slug       String           @unique
    roles      RolePermission[]
}

model RolePermission {
    id           Int        @id @default(autoincrement())
    roleId       Int
    permissionId Int
    Role         Role       @relation(fields: [roleId], references: [id])
    Permission   Permission @relation(fields: [permissionId], references: [id])
}